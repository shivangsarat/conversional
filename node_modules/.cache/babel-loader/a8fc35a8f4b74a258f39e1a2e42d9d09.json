{"ast":null,"code":"import { createElement, useEffect, useState } from \"react\";\nimport { BoxComponent } from \"./BoxComponent\";\nimport { ButtonComponent } from \"./ButtonComponent\";\nimport { LinkComponent } from \"./LinkComponent\";\nimport { ListComponent } from \"./ListComponent\";\nimport { ParagraphComponent } from \"./ParagraphComponent\";\nimport { H1Component } from \"./H1Component\";\nimport { H2Component } from \"./H2Component\";\nimport { ModalComponent } from \"./ModalComponent\";\nconst keysToComponentMap = {\n  BoxComponent: BoxComponent,\n  ParagraphComponent: ParagraphComponent,\n  ListComponent: ListComponent,\n  LinkComponent: LinkComponent,\n  ButtonComponent: ButtonComponent,\n  H1Component: H1Component,\n  H2Component: H2Component,\n  ModalComponent: ModalComponent\n};\nexport const RennderComponents = config => {\n  let openModal = null;\n  let children = [];\n\n  for (const key in config.Children) {\n    children.push(config.Children[key]);\n\n    if (config.Children[key] === 'Modal') {\n      openModal = config.Children[key].Modal && config.Children[key].Modal.Content && config.Children[key].Modal.Content.props && config.Children[key].Modal.Content.props.isOpen ? config.Children[key].Modal.Content.props.isOpen : false;\n    }\n  }\n\n  const handleClick = (component, cbdata) => {\n    switch (component) {\n      case 'modal':\n        openModal = cbdata;\n        break;\n\n      default:\n        break;\n    }\n\n    window.location['reload']();\n  };\n\n  console.log(\"openModal\", openModal);\n\n  if (config && config.Content && config.Content.type && typeof keysToComponentMap[config.Content.type] !== 'undefined') {\n    return /*#__PURE__*/createElement(keysToComponentMap[config.Content.type], {\n      props: config.Content.props ? config.Content.props : {},\n      className: config.Content.className ? config.Content.className : null,\n      id: config.Content.id ? config.Content.id : null,\n      cb: handleClick,\n      open: openModal // onClick: handleClick\n\n    }, children.length > 0 && children.map(c => RennderComponents(c)));\n  }\n};\n_c = RennderComponents;\n\nvar _c;\n\n$RefreshReg$(_c, \"RennderComponents\");","map":{"version":3,"sources":["/Users/shivangsarat/Desktop/projects/conversional/src/components/RenderComponent.js"],"names":["createElement","useEffect","useState","BoxComponent","ButtonComponent","LinkComponent","ListComponent","ParagraphComponent","H1Component","H2Component","ModalComponent","keysToComponentMap","RennderComponents","config","openModal","children","key","Children","push","Modal","Content","props","isOpen","handleClick","component","cbdata","window","location","console","log","type","className","id","cb","open","length","map","c"],"mappings":"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","sourcesContent":["import { createElement, useEffect, useState } from \"react\";\nimport { BoxComponent } from \"./BoxComponent\";\nimport { ButtonComponent } from \"./ButtonComponent\";\nimport { LinkComponent } from \"./LinkComponent\";\nimport { ListComponent } from \"./ListComponent\";\nimport { ParagraphComponent } from \"./ParagraphComponent\";\nimport { H1Component } from \"./H1Component\";\nimport { H2Component } from \"./H2Component\";\nimport { ModalComponent } from \"./ModalComponent\";\n\nconst keysToComponentMap = {\n    BoxComponent: BoxComponent,\n    ParagraphComponent: ParagraphComponent,\n    ListComponent: ListComponent,\n    LinkComponent: LinkComponent,\n    ButtonComponent: ButtonComponent,\n    H1Component: H1Component,\n    H2Component: H2Component,\n    ModalComponent: ModalComponent\n}\n\nexport const RennderComponents = config => {\n    let openModal = null;\n    let children = [];\n    for (const key in config.Children) {\n        children.push(config.Children[key]);\n        if (config.Children[key] === 'Modal') {\n            openModal = config.Children[key].Modal && config.Children[key].Modal.Content && config.Children[key].Modal.Content.props && config.Children[key].Modal.Content.props.isOpen ? config.Children[key].Modal.Content.props.isOpen : false;\n        }\n    }\n    const handleClick = (component, cbdata) => {\n        switch (component) {\n            case 'modal':\n                openModal = cbdata;\n                break;\n        \n            default:\n                break;\n        }\n        window.location['reload']();\n    }\n    console.log(\"openModal\", openModal)\n    if (config && config.Content && config.Content.type && typeof keysToComponentMap[config.Content.type] !== 'undefined') {\n        return createElement(\n            keysToComponentMap[config.Content.type],\n            {\n                props: config.Content.props ? config.Content.props : {},\n                className: config.Content.className ? config.Content.className : null,\n                id: config.Content.id ? config.Content.id : null,\n                cb: handleClick,\n                open: openModal,\n                // onClick: handleClick\n            },\n            children.length > 0 && children.map( c => RennderComponents(c))\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}
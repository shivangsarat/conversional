{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createElement, useEffect, useState } from \"react\";\nimport { BoxComponent } from \"./BoxComponent\";\nimport { ButtonComponent } from \"./ButtonComponent\";\nimport { LinkComponent } from \"./LinkComponent\";\nimport { ListComponent } from \"./ListComponent\";\nimport { ParagraphComponent } from \"./ParagraphComponent\";\nimport { H1Component } from \"./H1Component\";\nimport { H2Component } from \"./H2Component\";\nimport { ModalComponent } from \"./ModalComponent\";\nconst keysToComponentMap = {\n  BoxComponent: BoxComponent,\n  ParagraphComponent: ParagraphComponent,\n  ListComponent: ListComponent,\n  LinkComponent: LinkComponent,\n  ButtonComponent: ButtonComponent,\n  H1Component: H1Component,\n  H2Component: H2Component,\n  ModalComponent: ModalComponent\n};\nexport const RennderComponents = config => {\n  _s();\n\n  const [openModal, setOpenModal] = useState(config.Content.props.isOpen ? config.Content.props.isOpen : null); // let open = config.Content.props.isOpen ? config.Content.props.isOpen : null;\n\n  let children = [];\n\n  for (const key in config.Children) {\n    children.push(config.Children[key]); // if (key === 'Modal') {\n    //     window.openModal = config.Children[key] && config.Children[key].Content && config.Children[key].Content.props && config.Children[key].Content.props.isOpen ? config.Children[key].Content.props.isOpen : false;\n    // }\n  }\n\n  const cb = (component, cbdata) => {\n    console.log(\"cb\", component, cbdata);\n\n    if (component === 'modal') {\n      // open = cbdata\n      setOpenModal(cbdata);\n    }\n  };\n\n  if (config && config.Content && config.Content.type && typeof keysToComponentMap[config.Content.type] !== 'undefined') {\n    return /*#__PURE__*/createElement(keysToComponentMap[config.Content.type], {\n      props: config.Content.props ? config.Content.props : {},\n      className: config.Content.className ? config.Content.className : null,\n      id: config.Content.id ? config.Content.id : null,\n      cb: cb,\n      open: openModal\n    }, children.length > 0 && children.map(c => RennderComponents(c)));\n  }\n};\n\n_s(RennderComponents, \"x8Iy3BbwohUMPfQjaPE6UDQM+ZM=\");\n\n_c = RennderComponents;\n\nvar _c;\n\n$RefreshReg$(_c, \"RennderComponents\");","map":{"version":3,"sources":["/Users/shivangsarat/Desktop/projects/conversional/src/components/RenderComponent.js"],"names":["createElement","useEffect","useState","BoxComponent","ButtonComponent","LinkComponent","ListComponent","ParagraphComponent","H1Component","H2Component","ModalComponent","keysToComponentMap","RennderComponents","config","openModal","setOpenModal","Content","props","isOpen","children","key","Children","push","cb","component","cbdata","console","log","type","className","id","open","length","map","c"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,MAAMC,kBAAkB,GAAG;AACvBR,EAAAA,YAAY,EAAEA,YADS;AAEvBI,EAAAA,kBAAkB,EAAEA,kBAFG;AAGvBD,EAAAA,aAAa,EAAEA,aAHQ;AAIvBD,EAAAA,aAAa,EAAEA,aAJQ;AAKvBD,EAAAA,eAAe,EAAEA,eALM;AAMvBI,EAAAA,WAAW,EAAEA,WANU;AAOvBC,EAAAA,WAAW,EAAEA,WAPU;AAQvBC,EAAAA,cAAc,EAAEA;AARO,CAA3B;AAWA,OAAO,MAAME,iBAAiB,GAAGC,MAAM,IAAI;AAAA;;AACvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAACW,MAAM,CAACG,OAAP,CAAeC,KAAf,CAAqBC,MAArB,GAA8BL,MAAM,CAACG,OAAP,CAAeC,KAAf,CAAqBC,MAAnD,GAA4D,IAA7D,CAA1C,CADuC,CAEvC;;AACA,MAAIC,QAAQ,GAAG,EAAf;;AACA,OAAK,MAAMC,GAAX,IAAkBP,MAAM,CAACQ,QAAzB,EAAmC;AAC/BF,IAAAA,QAAQ,CAACG,IAAT,CAAcT,MAAM,CAACQ,QAAP,CAAgBD,GAAhB,CAAd,EAD+B,CAE/B;AACA;AACA;AACH;;AACD,QAAMG,EAAE,GAAG,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBH,SAAlB,EAA6BC,MAA7B;;AACA,QAAID,SAAS,KAAK,OAAlB,EAA2B;AACvB;AACAT,MAAAA,YAAY,CAACU,MAAD,CAAZ;AACH;AACJ,GAND;;AAOA,MAAIZ,MAAM,IAAIA,MAAM,CAACG,OAAjB,IAA4BH,MAAM,CAACG,OAAP,CAAeY,IAA3C,IAAmD,OAAOjB,kBAAkB,CAACE,MAAM,CAACG,OAAP,CAAeY,IAAhB,CAAzB,KAAmD,WAA1G,EAAuH;AACnH,wBAAO5B,aAAa,CAChBW,kBAAkB,CAACE,MAAM,CAACG,OAAP,CAAeY,IAAhB,CADF,EAEhB;AACIX,MAAAA,KAAK,EAAEJ,MAAM,CAACG,OAAP,CAAeC,KAAf,GAAuBJ,MAAM,CAACG,OAAP,CAAeC,KAAtC,GAA8C,EADzD;AAEIY,MAAAA,SAAS,EAAEhB,MAAM,CAACG,OAAP,CAAea,SAAf,GAA2BhB,MAAM,CAACG,OAAP,CAAea,SAA1C,GAAsD,IAFrE;AAGIC,MAAAA,EAAE,EAAEjB,MAAM,CAACG,OAAP,CAAec,EAAf,GAAoBjB,MAAM,CAACG,OAAP,CAAec,EAAnC,GAAwC,IAHhD;AAIIP,MAAAA,EAAE,EAAEA,EAJR;AAKIQ,MAAAA,IAAI,EAAEjB;AALV,KAFgB,EAShBK,QAAQ,CAACa,MAAT,GAAkB,CAAlB,IAAuBb,QAAQ,CAACc,GAAT,CAAcC,CAAC,IAAItB,iBAAiB,CAACsB,CAAD,CAApC,CATP,CAApB;AAWH;AACJ,CA9BM;;GAAMtB,iB;;KAAAA,iB","sourcesContent":["import { createElement, useEffect, useState } from \"react\";\nimport { BoxComponent } from \"./BoxComponent\";\nimport { ButtonComponent } from \"./ButtonComponent\";\nimport { LinkComponent } from \"./LinkComponent\";\nimport { ListComponent } from \"./ListComponent\";\nimport { ParagraphComponent } from \"./ParagraphComponent\";\nimport { H1Component } from \"./H1Component\";\nimport { H2Component } from \"./H2Component\";\nimport { ModalComponent } from \"./ModalComponent\";\n\nconst keysToComponentMap = {\n    BoxComponent: BoxComponent,\n    ParagraphComponent: ParagraphComponent,\n    ListComponent: ListComponent,\n    LinkComponent: LinkComponent,\n    ButtonComponent: ButtonComponent,\n    H1Component: H1Component,\n    H2Component: H2Component,\n    ModalComponent: ModalComponent\n}\n\nexport const RennderComponents = config => {\n    const [openModal, setOpenModal] = useState(config.Content.props.isOpen ? config.Content.props.isOpen : null)\n    // let open = config.Content.props.isOpen ? config.Content.props.isOpen : null;\n    let children = []\n    for (const key in config.Children) {\n        children.push(config.Children[key])\n        // if (key === 'Modal') {\n        //     window.openModal = config.Children[key] && config.Children[key].Content && config.Children[key].Content.props && config.Children[key].Content.props.isOpen ? config.Children[key].Content.props.isOpen : false;\n        // }\n    }\n    const cb = (component, cbdata) => {\n        console.log(\"cb\", component, cbdata)\n        if (component === 'modal') {\n            // open = cbdata\n            setOpenModal(cbdata)\n        }\n    }\n    if (config && config.Content && config.Content.type && typeof keysToComponentMap[config.Content.type] !== 'undefined') {\n        return createElement(\n            keysToComponentMap[config.Content.type],\n            {\n                props: config.Content.props ? config.Content.props : {},\n                className: config.Content.className ? config.Content.className : null,\n                id: config.Content.id ? config.Content.id : null,\n                cb: cb,\n                open: openModal\n            },\n            children.length > 0 && children.map( c => RennderComponents(c))\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}